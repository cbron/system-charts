---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-webhook-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: istio-webhook-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
rules:
  - apiGroups: ['apps']
    resources: ['deployments']
    verbs: ['get', 'list', 'delete']
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["validatingwebhookconfigurations"]
    verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-webhook-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "1"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: istio-webhook-cleanup
subjects:
  - kind: ServiceAccount
    name: istio-webhook-cleanup
    namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: istio-webhook-cleanup
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  annotations:
    "helm.sh/hook": pre-upgrade
    "helm.sh/hook-weight": "2"
    # "helm.sh/hook-delete-policy": hook-succeeded
spec:
  template:
    metadata:
      name: istio-webhook-cleanup
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-webhook-cleanup
      restartPolicy: OnFailure
      containers:
        - name: cleanup
          image: "{{ template "system_default_registry" . }}{{ .Values.webhookCleanup.image.repository }}:{{ .Values.webhookCleanup.image.tag }}"
          imagePullPolicy: Always
